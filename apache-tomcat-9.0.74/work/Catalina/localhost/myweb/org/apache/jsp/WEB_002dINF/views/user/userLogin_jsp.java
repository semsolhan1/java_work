/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-30 07:43:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userLogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<section>\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div class=\"col-lg-6 col-md-7 col-xs-10 login-form\">\n");
      out.write("                    <div class=\"titlebox\">\n");
      out.write("                        로그인\n");
      out.write("                    </div>\n");
      out.write("                   <form method=\"post\" name=\"loginForm\">\n");
      out.write("                        <div class=\"form-group\"><!--사용자클래스선언-->\n");
      out.write("                            <label for=\"id\">아이디</label>\n");
      out.write("                            <input type=\"text\" name=\"userId\" class=\"form-control\" id=\"id\" placeholder=\"아이디\">\n");
      out.write("                         </div>\n");
      out.write("                         <div class=\"form-group\"><!--사용자클래스선언-->\n");
      out.write("                            <label for=\"id\">비밀번호</label>\n");
      out.write("                            <input type=\"password\" name=\"userPw\" class=\"form-control\" id=\"pw\" placeholder=\"비밀번호\">\n");
      out.write("                         </div>\n");
      out.write("                         <div class=\"form-group\">\n");
      out.write("                            <button type=\"button\" id=\"loginBtn\" class=\"btn btn-info btn-block\">로그인</button>\n");
      out.write("                            <button type=\"button\" id=\"joinBtn\" class=\"btn btn-primary btn-block\">회원가입</button>\n");
      out.write("                         </div>                                  \n");
      out.write("                    </form>                \n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </section>\n");
      out.write("\n");
      out.write("	<script>\n");
      out.write("    	\n");
      out.write("    	//회원 가입 완료 후 addFlashAttribute로 msg 데이터가 전달 되는 지 확인\n");
      out.write("    	const msg = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${msg}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\n");
      out.write("    	if(msg === 'joinSuccess') {\n");
      out.write("    		alert('회원 가입 정상 처리되었습니다.');\n");
      out.write("    	} else if(msg === 'loginFail') {\n");
      out.write("    		alert('로그인에 실패했습니다. 아이디와 비밀번호를 확인하세요.');\n");
      out.write("    	}\n");
      out.write("    	\n");
      out.write("    	//id, pw 입력란이 공백인 지 아닌지 확인한 후, 공백이 아니라면 submit을 진행하세요.\n");
      out.write("    	//요청 url은 /user/userLogin -> post로 갑니다. (비동기 아니에요!)\n");
      out.write("    	document.getElementById('loginBtn').onclick = () => {\n");
      out.write("            if(document.getElementById('id').value === '') {\n");
      out.write("                alert('아이디를 적어야 로그인을 하죠!');\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("            if(document.getElementById('pw').value === '') {\n");
      out.write("                alert('비밀번호를 작성하세요!');\n");
      out.write("                return;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            document.loginForm.submit();\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        document.getElementById('joinBtn').onclick = () => {\n");
      out.write("            location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/join';\n");
      out.write("        }\n");
      out.write("    	\n");
      out.write("    \n");
      out.write("    </script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
