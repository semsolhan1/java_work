/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-19 02:56:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class userJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/user/../include/header.jsp", Long.valueOf(1684377399720L));
    _jspx_dependants.put("/WEB-INF/views/user/../include/footer.jsp", Long.valueOf(1684219586830L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>인덱스를 만들어 보자</title>\r\n");
      out.write("\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/bootstrap.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\r\n");
      out.write("    <!--개인 디자인 추가-->\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/bootstrap.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"container\">\r\n");
      out.write("                    <div class=\"navbar\">\r\n");
      out.write("                        <div class=\"navbar-header\">\r\n");
      out.write("                            <!--data-toggle 같은 것들은 내부적으로 지원하는 반응형 API기능이므로 지우면 안됩니다-->\r\n");
      out.write("                            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                            </button>\r\n");
      out.write("                            <a class=\"navbar-brand\" href=\"#\"><img width=\"30\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/logo.svg\" alt=\"Brand\"></a>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("                            <ul class=\"nav navbar-nav\">\r\n");
      out.write("                                <li class=\"active\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">Main</a></li>\r\n");
      out.write("                                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/freeboard/freeList\">자유게시판</a></li>\r\n");
      out.write("                                <!-- \r\n");
      out.write("				<li><a href=\"#\">강의</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Form</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Board</a></li>\r\n");
      out.write(" 				-->\r\n");
      out.write("\r\n");
      out.write("                            </ul>\r\n");
      out.write("                            <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("                                <li class=\"dropdown\">\r\n");
      out.write("                                    <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">로그인\r\n");
      out.write("                                        <span class=\"caret\"></span></a>\r\n");
      out.write("                                    <ul class=\"dropdown-menu\">\r\n");
      out.write("                                        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/userJoin\"><span class=\"glyphicon glyphicon-user\"></span>Join</a></li>\r\n");
      out.write("                                        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/userLogin\"><span class=\"glyphicon glyphicon-log-in\"></span>Login</a></li>\r\n");
      out.write("                                        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/userMypage\"><span class=\"glyphicon glyphicon-user\"></span>MyPage</a></li>\r\n");
      out.write("                                        <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/userLogout\"><span class=\"glyphicon glyphicon-log-out\"></span>Logout</a></li>\r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                </li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("\r\n");
      out.write("                            <form class=\"navbar-form navbar-right\" action=\"\">\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n");
      out.write("                                    <div class=\"input-group-btn\">\r\n");
      out.write("\r\n");
      out.write("                                        <button class=\"btn btn-primary\" type=\"submit\">\r\n");
      out.write("                                           	 검색\r\n");
      out.write("                                        </button>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>");
      out.write("\r\n");
      out.write("	<section>\r\n");
      out.write("	    <div class=\"container\">\r\n");
      out.write("	        <div class=\"row\">\r\n");
      out.write("	            <div class=\"col-lg-6 col-md-9 col-sm-12 join-form\">\r\n");
      out.write("	                <div class=\"titlebox\">\r\n");
      out.write("	                    회원가입\r\n");
      out.write("	                </div>\r\n");
      out.write("	                <form action=\"\">\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <!--사용자클래스선언-->\r\n");
      out.write("	                        <label for=\"id\">아이디</label>\r\n");
      out.write("	                        <div class=\"input-group\">\r\n");
      out.write("	                            <!--input2탭의 input-addon을 가져온다 -->\r\n");
      out.write("	                            <input type=\"text\" class=\"form-control\" id=\"userId\" placeholder=\"아이디를 (영문포함 4~12자 이상)\">\r\n");
      out.write("	                            <div class=\"input-group-addon\">\r\n");
      out.write("	                                <button type=\"button\" class=\"btn btn-primary\" id=\"idCheckBtn\">아이디중복체크</button>\r\n");
      out.write("	                            </div>\r\n");
      out.write("	                        </div>\r\n");
      out.write("	                        <span id=\"msgId\"></span>\r\n");
      out.write("	                        <!--자바스크립트에서 추가-->\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <!--기본 폼그룹을 가져온다-->\r\n");
      out.write("	                        <label for=\"password\">비밀번호</label>\r\n");
      out.write("	                        <input type=\"password\" class=\"form-control\" id=\"userPw\"\r\n");
      out.write("	                            placeholder=\"비밀번호 (영 대/소문자, 숫자 조합 8~16자 이상)\">\r\n");
      out.write("	                        <span id=\"msgPw\"></span>\r\n");
      out.write("	                        <!--자바스크립트에서 추가-->\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <label for=\"password-confrim\">비밀번호 확인</label>\r\n");
      out.write("	                        <input type=\"password\" class=\"form-control\" id=\"pwConfirm\" placeholder=\"비밀번호를 확인해주세요.\">\r\n");
      out.write("	                        <span id=\"msgPw-c\"></span>\r\n");
      out.write("	                        <!--자바스크립트에서 추가-->\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <label for=\"name\">이름</label>\r\n");
      out.write("	                        <input type=\"text\" class=\"form-control\" id=\"userName\" placeholder=\"이름을 입력하세요.\">\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <!--input2탭의 input-addon을 가져온다 -->\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <label for=\"hp\">휴대폰번호</label>\r\n");
      out.write("	                        <div class=\"input-group\">\r\n");
      out.write("	                            <select class=\"form-control phone1\" id=\"userPhone1\">\r\n");
      out.write("	                                <option>010</option>\r\n");
      out.write("	                                <option>011</option>\r\n");
      out.write("	                                <option>017</option>\r\n");
      out.write("	                                <option>018</option>\r\n");
      out.write("	                            </select>\r\n");
      out.write("	                            <input type=\"text\" class=\"form-control phone2\" id=\"userPhone2\" placeholder=\"휴대폰번호를 입력하세요.\">\r\n");
      out.write("	                        </div>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"form-group email-form\">\r\n");
      out.write("	                        <label for=\"email\">이메일</label><br>\r\n");
      out.write("	                            <div class=\"input-group\">\r\n");
      out.write("	                                <input type=\"text\" class=\"form-control\" id=\"userEmail1\" placeholder=\"이메일\">\r\n");
      out.write("	                                <select class=\"form-control\" id=\"userEmail2\">\r\n");
      out.write("	                                    <option>@naver.com</option>\r\n");
      out.write("	                                    <option>@daum.net</option>\r\n");
      out.write("	                                    <option>@gmail.com</option>\r\n");
      out.write("	                                    <option>@hanmail.com</option>\r\n");
      out.write("	                                    <option>@yahoo.co.kr</option>\r\n");
      out.write("	                                </select>\r\n");
      out.write("	                                                        <div class=\"input-group-addon\">\r\n");
      out.write("	                                <button type=\"button\" id=\"mail-check-btn\" class=\"btn btn-primary\">이메일 인증</button>\r\n");
      out.write("	                                                        </div>\r\n");
      out.write("	                            </div>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"mail-check-box\">\r\n");
      out.write("	                        <input type=\"text\" class=\"form-control mail-check-input\" placeholder=\"인증번호 6자리를 입력하세요.\"\r\n");
      out.write("	                            maxlength=\"6\" disabled=\"disabled\">\r\n");
      out.write("	                        <span id=\"mail-check-warn\"></span>\r\n");
      out.write("	                    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	                    <!--readonly 속성 추가시 자동으로 블락-->\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <label for=\"addr-num\">주소</label>\r\n");
      out.write("	                        <div class=\"input-group\">\r\n");
      out.write("	                            <input type=\"text\" class=\"form-control\" id=\"addrZipNum\" placeholder=\"우편번호\" readonly>\r\n");
      out.write("	                            <div class=\"input-group-addon\">\r\n");
      out.write("	                                <button type=\"button\" class=\"btn btn-primary\">주소찾기</button>\r\n");
      out.write("	                            </div>\r\n");
      out.write("	                        </div>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <input type=\"text\" class=\"form-control\" id=\"addrBasic\" placeholder=\"기본주소\">\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <input type=\"text\" class=\"form-control\" id=\"addrDetail\" placeholder=\"상세주소\">\r\n");
      out.write("	                    </div>\r\n");
      out.write("\r\n");
      out.write("	                    <!--button탭에 들어가서 버튼종류를 확인한다-->\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <button type=\"button\" class=\"btn btn-lg btn-success btn-block\">회원가입</button>\r\n");
      out.write("	                    </div>\r\n");
      out.write("\r\n");
      out.write("	                    <div class=\"form-group\">\r\n");
      out.write("	                        <button type=\"button\" class=\"btn btn-lg btn-info btn-block\">로그인</button>\r\n");
      out.write("	                    </div>\r\n");
      out.write("	                </form>\r\n");
      out.write("	            </div>\r\n");
      out.write("	        </div>\r\n");
      out.write("	    </div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-md-7 col-sm-12\">\r\n");
      out.write("                    <div class=\"copyright\">\r\n");
      out.write("                        <a href=\"\">\r\n");
      out.write("                            <img width=\"20\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/logo.svg\" alt=\"Brand\">\r\n");
      out.write("                        </a>\r\n");
      out.write("                        Bootstrap | 대표자 : 홍길동 | E-MAIL : info&#64;info.com<br>\r\n");
      out.write("                        사업자번호 : 123-56-78910 | 개인정보보호책임자 : 홍길동 | 통신판매업 : 2019-서울강남-0001<br>\r\n");
      out.write("                        주소 : 서울시 강남구\r\n");
      out.write("                        <address>&copy;Bootstrap. ALL RIGHTS RESERVED</address>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-md-5 col-sm-12 text-right\">\r\n");
      out.write("                    <ul class=\"footer-menu\">\r\n");
      out.write("                        <li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("                        <li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("                        <li><a href=\"#\">개인정보취급방침</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <!-- //footer -->");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("\r\n");
      out.write("		let code = ''; //이메일 전송 인증번호 저장을 위한 변수\r\n");
      out.write("\r\n");
      out.write("		//아이디 중복 체크\r\n");
      out.write("		document.getElementById('idCheckBtn').onclick = function() {\r\n");
      out.write("\r\n");
      out.write("			const userId = document.getElementById('userId').value;\r\n");
      out.write("			if(userId === '') {\r\n");
      out.write("				alert('아이디는 필수값입니다.');\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("\r\n");
      out.write("		// 	//아이디 중복확인 비동기 요청 준비\r\n");
      out.write("		// 	const xhr = new XMLHttpRequest();\r\n");
      out.write("\r\n");
      out.write("		// 	//서버 요청 정보 설정\r\n");
      out.write("		// 	xhr.open('POST', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/idCheck');\r\n");
      out.write("		// 	//요청 정보를 헤더에 설정\r\n");
      out.write("		// 	xhr.setRequestHeader('content-type', 'text/plain'); //문자하나 보내는 용도(객체x)\r\n");
      out.write("		// 	xhr.send(userId);\r\n");
      out.write("\r\n");
      out.write("		// 	xhr.onload = () => {\r\n");
      out.write("		// 		console.log(xhr.status);\r\n");
      out.write("		// 		console.log(xhr.response);\r\n");
      out.write("		// 	}\r\n");
      out.write("			\r\n");
      out.write("		/*\r\n");
      out.write("		# fetch API: 자바스크립트에서 제공하는 비동기 통신 함수.\r\n");
      out.write("		- Promise 객체를 자동으로 리턴하여 손쉽게 통신의 응답데이터를\r\n");
      out.write("		소비할 수 있게 해 줍니다. (Promise: 비동기 통신의 순서를 보장하는 문법)\r\n");
      out.write("		- fetch함수가 리턴하는 Promise 객체는 단순한 응답 JSON 데이터가 아닌\r\n");
      out.write("		전체적이고, 포괄적인 응답 정보를 가지고 있습니다.\r\n");
      out.write("		- 따라서, 서버가 응답한 여러 정보 중 JSON 데이터만 소비하려면\r\n");
      out.write("		json()이라는 메서드를 사용합니다.\r\n");
      out.write("		- 문자열 데이터라면 text() 메서드를 사용합니다.\r\n");
      out.write("		*/\r\n");
      out.write("		/*\r\n");
      out.write("		//fetch('url', {요청 관련 정보 객체})\r\n");
      out.write("		fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/idCheck', {\r\n");
      out.write("			method: 'post',\r\n");
      out.write("			headers: {\r\n");
      out.write("				'content-Type':'text/plain'\r\n");
      out.write("			},\r\n");
      out.write("			body: userId\r\n");
      out.write("		})\r\n");
      out.write("		//Promise 객체의 상태가 요청 성공일 시 데이터 후속 처리 진행.\r\n");
      out.write("		.then(res => {\r\n");
      out.write("			//fetch함수를 통해 비동기 통신이 실행되고,\r\n");
      out.write("			//요청이 완료된 후 then()의 매개값으로 응답에 관련된\r\n");
      out.write("			//함수를 콜백 방식으로 전달합니다.\r\n");
      out.write("			//함수의 매개변수를 선언하면 해당 매개변수로 응답에 관련된\r\n");
      out.write("			//전반적인 정보를 가진 응답정보가 전달됩니다.\r\n");
      out.write("			// console.log(res);\r\n");
      out.write("			// console.log(res.text());\r\n");
      out.write("			return res.text()\r\n");
      out.write("		})\r\n");
      out.write("		.then(data => {\r\n");
      out.write("			console.lot(data);\r\n");
      out.write("		});\r\n");
      out.write("		*/\r\n");
      out.write("		//요청에 관련된 정보 객체\r\n");
      out.write("		const reqObj = {\r\n");
      out.write("			method: 'post',\r\n");
      out.write("			headers: {\r\n");
      out.write("				'content-Type':'text/plain'\r\n");
      out.write("			},\r\n");
      out.write("			body: userId\r\n");
      out.write("		};\r\n");
      out.write("		//비동기 요청 보내기\r\n");
      out.write("		fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/idCheck', reqObj)\r\n");
      out.write("			.then(res => res.text())//요청 완료 후 응답 정보에서 텍스트만 빼기\r\n");
      out.write("				.then(data => {\r\n");
      out.write("					if(data === 'ok') {\r\n");
      out.write("						//더 이상 아이디를 작성할 수 없도록 막아주겠다.\r\n");
      out.write("						document.getElementById('userId').setAttribute('readonly', true);\r\n");
      out.write("						//더 이상 버튼을 누를 수 없도록 버튼 비활성화.\r\n");
      out.write("						document.getElementById('idCheckBtn').setAttribute('disabled', true);\r\n");
      out.write("						//메세지 남기기\r\n");
      out.write("						document.getElementById('msgId').textContent = '사용 가능한 아이디 입니다.';\r\n");
      out.write("					} else {\r\n");
      out.write("						document.getElementById('msgId').textContent = '중복된 아이디 입니다.';\r\n");
      out.write("					}\r\n");
      out.write("				}); //텍스트만 뺀 Promise 객체로부터 data 전달받음.\r\n");
      out.write("		} //아이디 중복 확인 끝.\r\n");
      out.write("		\r\n");
      out.write("\r\n");
      out.write("		//인증번호 이메일 전송\r\n");
      out.write("		document.getElementById('mail-check-btn').onclick = function() {\r\n");
      out.write("			const email = document.getElementById('userEmail1').value + document.getElementById('userEmail2').value;\r\n");
      out.write("			console.log('완성된 email: ' + email);\r\n");
      out.write("			fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/mailCheck?email=' + email)\r\n");
      out.write("			.then(res => res.text())\r\n");
      out.write("			.then(data => {\r\n");
      out.write("				console.log('인증번호: ' + data);\r\n");
      out.write("				//비활성된 인증번호 입력창을 활성화\r\n");
      out.write("				document.querySelector('.mail-check-input').disabled = false;\r\n");
      out.write("				code = data; //인증번호를 전역변수에 저장.\r\n");
      out.write("				alert('인증번호가 전송되었습니다. 확인 후 입력란에 정확히 입력하세요.');\r\n");
      out.write("			}); //비동기 끝.\r\n");
      out.write("			\r\n");
      out.write("	};// 인증번호 이벤트 끝.\r\n");
      out.write("\r\n");
      out.write("	//인증번호 검증\r\n");
      out.write("	//blur -> focus가 벗어나는 경우 발생.\r\n");
      out.write("	document.querySelector('.mail-check-input').onblur = function(e) {\r\n");
      out.write("		// console.log('blur 이벤트 발생 확인!');\r\n");
      out.write("		const inputCode = e.target.value; //사용자가 입력한 인증번호.\r\n");
      out.write("		const $resultMsg = document.getElementById('mail-check-warn'); //span\r\n");
      out.write("		console.log('사용자가 입력한 값: ' + inputCode);\r\n");
      out.write("\r\n");
      out.write("		if(inputCode === code) {\r\n");
      out.write("			$resultMsg.textContent = '인증번호가 일치합니다.';\r\n");
      out.write("			$resultMsg.style.color = 'green';\r\n");
      out.write("			//이메일 인증을 더이상 못하게 버튼 비활성\r\n");
      out.write("			document.getElementById('mail-check-btn').disabled = true;\r\n");
      out.write("			document.getElementById('userEmail1').setAttribute('readonly', true);\r\n");
      out.write("			\r\n");
      out.write("			document.getElementById('userEmail2').setAttribute('readonly', true);\r\n");
      out.write("			e.target.style.display = 'none'; //인증번호 입력창 숨기기\r\n");
      out.write("			//초기값을 사용자가 선택한 값으로 무조건 설정하는 방법(select에서 readonly대용)\r\n");
      out.write("			//항상 2개 같이 쓰셔야해요.\r\n");
      out.write("			const email2 = document.getElementById('userEmail2');\r\n");
      out.write("\r\n");
      out.write("			email2.setAttribute('onFocus', 'this.initialSelect = this.selectedIndex');\r\n");
      out.write("			email2.setAttribute('onChange', 'this.selectedIndex = this.initialSelect');\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("		} else {\r\n");
      out.write("			$resultMsg.textContent = '인증번호를 다시 확인해 주세요.';\r\n");
      out.write("			$resultMsg.style.color = 'red';\r\n");
      out.write("			e.target.focus(); //다시 입력할 수 있도록 포커싱 주기.\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        /*아이디 형식 검사 스크립트*/\r\n");
      out.write("        var id = document.getElementById(\"userId\");\r\n");
      out.write("        id.onkeyup = function() {\r\n");
      out.write("            /*\r\n");
      out.write("            	자바스크립트의 정규표현식 입니다\r\n");
      out.write("            	정규표현식: 문자열 내의 특정 문자 조합을 찾기 위한 패턴입니다.\r\n");
      out.write("            	특정 규칙이 있는 문자열 집합을 규칙을 직접 지정하여 탐색하게 해 주는\r\n");
      out.write("            	메타 문자 입니다.\r\n");
      out.write("            */\r\n");
      out.write("            /*test메서드를 통해 비교하며, 매칭되면 true, 아니면 false반환 */\r\n");
      out.write("            var regex = /^[A-Za-z0-9+]{4,12}$/; \r\n");
      out.write("            if(regex.test(document.getElementById(\"userId\").value )) {\r\n");
      out.write("                document.getElementById(\"userId\").style.borderColor = \"green\";\r\n");
      out.write("                document.getElementById(\"msgId\").innerHTML = \"아이디 중복 체크는 필수 입니다\";\r\n");
      out.write("\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"userId\").style.borderColor = \"red\";\r\n");
      out.write("                document.getElementById(\"msgId\").innerHTML = \"부적합한 아이디 입니다.\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        /*비밀번호 형식 검사 스크립트*/\r\n");
      out.write("        var pw = document.getElementById(\"userPw\");\r\n");
      out.write("        pw.onkeyup = function(){\r\n");
      out.write("            var regex = /^[A-Za-z0-9+]{8,16}$/;\r\n");
      out.write("             if(regex.test(document.getElementById(\"userPw\").value )) {\r\n");
      out.write("                document.getElementById(\"userPw\").style.borderColor = \"green\";\r\n");
      out.write("                document.getElementById(\"msgPw\").innerHTML = \"사용 가능합니다\";\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"userPw\").style.borderColor = \"red\";\r\n");
      out.write("                document.getElementById(\"msgPw\").innerHTML = \"비밀번호를 제데로 입력하세요\";\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        /*비밀번호 확인검사*/\r\n");
      out.write("        var pwConfirm = document.getElementById(\"pwConfirm\");\r\n");
      out.write("        pwConfirm.onkeyup = function() {\r\n");
      out.write("            var regex = /^[A-Za-z0-9+]{8,16}$/;\r\n");
      out.write("            if(document.getElementById(\"pwConfirm\").value == document.getElementById(\"userPw\").value ) {\r\n");
      out.write("                document.getElementById(\"pwConfirm\").style.borderColor = \"green\";\r\n");
      out.write("                document.getElementById(\"msgPw-c\").innerHTML = \"비밀번호가 일치합니다\";\r\n");
      out.write("            } else {\r\n");
      out.write("                document.getElementById(\"pwConfirm\").style.borderColor = \"red\";\r\n");
      out.write("                document.getElementById(\"msgPw-c\").innerHTML = \"비밀번호 확인란을 확인하세요\";\r\n");
      out.write("            }\r\n");
      out.write("        }        \r\n");
      out.write("    </script>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
