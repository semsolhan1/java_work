/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.74
 * Generated at: 2023-05-29 09:27:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.Console;
import java.util.List;
import java.util.ArrayList;
import com.midterm.foodSNS.command.MfreeboardArticleVO;

public final class mypageResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1683770175553L));
    _jspx_dependants.put("jar:file:/C:/work/workfold/apache-tomcat-9.0.74/wtpwebapps/MidTerm/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.midterm.foodSNS.command.MfreeboardArticleVO");
    _jspx_imports_classes.add("java.io.Console");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("	<meta charset=\"utf-8\">\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("	\n");
      out.write("	<title>Bootstrap demo</title>\n");
      out.write("	<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\n");
      out.write("		integrity=\"sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65\" crossorigin=\"anonymous\">\n");
      out.write("	<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/mypageResult.css\" rel=\"stylesheet\">\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js\"\n");
      out.write("		integrity=\"sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("	</script>\n");
      out.write("	<div id=\"main-con\">\n");
      out.write("		<div id=\"main-left\">ddd</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("		<div id=\"main\">\n");
      out.write("\n");
      out.write("\n");
      out.write("			");

			ArrayList<MfreeboardArticleVO> articles = new ArrayList<>();
			articles = (ArrayList<MfreeboardArticleVO>) request.getAttribute("article");
			for (int i = 0; i < articles.size(); i++) {
			
      out.write("\n");
      out.write("			<div class=\"boxbox\" data-bs-toggle=\"modal\" data-userid=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("				data-fanum=\"");
      out.print(articles.get(i).getFreeboardArticleNumber());
      out.write("\" data-bs-target=\"#myModal\">\n");
      out.write("				");
      out.print(articles.get(i).getContent());
      out.write("\n");
      out.write("			</div>\n");
      out.write("			");

			}
			
      out.write("\n");
      out.write("		</div>\n");
      out.write("		<div id=\"main-right\">ddd</div>\n");
      out.write("\n");
      out.write("	</div>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<nav class=\"navbar bg-success fixed-top \">\n");
      out.write("		<div class=\"container-fluid\">\n");
      out.write("			<a class=\"navbar-brand text-light\" href=\"#\">Tasty Friend</a>\n");
      out.write("			<button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#offcanvasNavbar\"\n");
      out.write("				aria-controls=\"offcanvasNavbar\">\n");
      out.write("				<span class=\"navbar-toggler-icon\"></span>\n");
      out.write("			</button>\n");
      out.write("\n");
      out.write("			<div class=\"offcanvas offcanvas-end\" tabindex=\"-1\" id=\"offcanvasNavbar\"\n");
      out.write("				aria-labelledby=\"offcanvasNavbarLabel\">\n");
      out.write("				<div class=\"offcanvas-header\">\n");
      out.write("					<aside>\n");
      out.write("						<div id=\"logo\">\n");
      out.write("							<img src=\"\" alt=\"\">\n");
      out.write("						</div>\n");
      out.write("						<div id=\"profile-img-con\">\n");
      out.write("							<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/display/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.fileLoca}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.fileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("								alt=\"default\" id=\"profile-img\">\n");
      out.write("						</div>\n");
      out.write("						<div class=\"profileWrapper\">\n");
      out.write("							<div id=\"simpleProfile\">\n");
      out.write("								<h1>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.userId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h1>\n");
      out.write("								<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/userProfileModify\"\n");
      out.write("									id=\"promodify\">프로필수정</a>\n");
      out.write("								<h3>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.userNick}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\n");
      out.write("								<h5>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.message}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h5>\n");
      out.write("							</div>\n");
      out.write("							<ul class=\"navbar-nav justify-content-end flex-grow-1 pe-3\">\n");
      out.write("								<li class=\"nav-item\"><a class=\"nav-link active\" aria-current=\"page\"\n");
      out.write("										href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/\">Home</a>\n");
      out.write("								</li>\n");
      out.write("								<li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Follow\n");
      out.write("										Chief</a></li>\n");
      out.write("								<li class=\"nav-item\"><a class=\"nav-link\" href=\"#\">Add\n");
      out.write("										My Recipe</a></li>\n");
      out.write("								<li class=\"nav-item\"><a class=\"nav-link\"\n");
      out.write("										href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/freeboard/regist\">Add\n");
      out.write("										My Story</a></li>\n");
      out.write("\n");
      out.write("								<li class=\"nav-item dropdown\"><a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\"\n");
      out.write("										data-bs-toggle=\"dropdown\" aria-expanded=\"false\"> Option </a>\n");
      out.write("									<ul class=\"dropdown-menu\">\n");
      out.write("										<li><a class=\"dropdown-item\" href=\"#\">회원정보수정</a></li>\n");
      out.write("										<li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n");
      out.write("										<li>\n");
      out.write("											<hr class=\"dropdown-divider\">\n");
      out.write("										</li>\n");
      out.write("										<li><a class=\"dropdown-item\" href=\"#\">Logout</a></li>\n");
      out.write("									</ul>\n");
      out.write("							</ul>\n");
      out.write("\n");
      out.write("						</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("					</aside>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</nav>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- Modal -->\n");
      out.write("<div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n");
      out.write("	<div class=\"modal-dialog modal-xl\">\n");
      out.write("		<div class=\"modal-content\">\n");
      out.write("			<div class=\"modal-body\">\n");
      out.write("				<div class=\"modal-img\">\n");
      out.write("\n");
      out.write("					<div id=\"carouselExampleIndicators\" class=\"carousel slide carousel-dark\" data-bs-ride=\"true\">\n");
      out.write("						<div class=\"carousel-indicators\">\n");
      out.write("							<button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"0\"\n");
      out.write("								class=\"active\" aria-current=\"true\" aria-label=\"Slide 1\"></button>\n");
      out.write("							<button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"1\"\n");
      out.write("								aria-label=\"Slide 2\"></button>\n");
      out.write("							<button type=\"button\" data-bs-target=\"#carouselExampleIndicators\" data-bs-slide-to=\"2\"\n");
      out.write("								aria-label=\"Slide 3\"></button>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"carousel-inner\">\n");
      out.write("							<div class=\"carousel-item active\">\n");
      out.write("								<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/test.png\" class=\"d-block w-100 simg\"\n");
      out.write("									alt=\"..xxxe.\">\n");
      out.write("							</div>\n");
      out.write("							<div class=\"carousel-item\">\n");
      out.write("								<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/test.png\"\n");
      out.write("									class=\"d-block w-100 simg\" alt=\".xxx..\">\n");
      out.write("							</div>\n");
      out.write("							<div class=\"carousel-item\">\n");
      out.write("								<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/test.png\" class=\"d-block w-100 simg\"\n");
      out.write("									alt=\"..ddd.\">\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("						<button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\"\n");
      out.write("							data-bs-slide=\"prev\">\n");
      out.write("							<span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n");
      out.write("							<span class=\"visually-hidden\">Previous</span>\n");
      out.write("						</button>\n");
      out.write("						<button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleIndicators\"\n");
      out.write("							data-bs-slide=\"next\">\n");
      out.write("							<span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n");
      out.write("							<span class=\"visually-hidden\">Next</span>\n");
      out.write("						</button>\n");
      out.write("\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("				</div>\n");
      out.write("				<div class=\"modal-text\">\n");
      out.write("					<div id=\"freeuserimg\">\n");
      out.write("						<img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/user/display/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.fileLoca}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.fileName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\n");
      out.write("								alt=\"default\" id=\"profile-img2\">\n");
      out.write("								<div id=\"freeuserid\"></div>\n");
      out.write("								\n");
      out.write("					</div>\n");
      out.write("					\n");
      out.write("					\n");
      out.write("					<!-- *********************************************************************************** -->\n");
      out.write("					<div id=\"freecontent\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("						\n");
      out.write("						<div id=\"replyList\">\n");
      out.write("\n");
      out.write("							<!--  자바스크립트 단에서 반복문을 이용해서 댓글의 개수만큼 반복 표현. -->\n");
      out.write("							<div class='reply-wrap'>\n");
      out.write("								<div class='reply-image'>\n");
      out.write("									<img src='../resources/img/profile.png'>\n");
      out.write("								</div>\n");
      out.write("								<div class='reply-content'>\n");
      out.write("									<div class='reply-group'>\n");
      out.write("										<strong class='left'>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login.userNick}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</strong> <small class='left'>2019/12/10</small>\n");
      out.write("										<a href='#' class='right'><span\n");
      out.write("											class='glyphicon glyphicon-pencil'></span>수정</a> <a href='#'\n");
      out.write("											class='right'><span class='glyphicon glyphicon-remove'></span>삭제</a>\n");
      out.write("									</div>\n");
      out.write("									<textarea class=\"form-control\" rows=\"3\" id=\"reply\"></textarea>\n");
      out.write("								</div>\n");
      out.write("								<button type=\"button\" id=\"replyRegist\"\n");
      out.write("									class=\"right btn btn-info\">등록하기</button>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("						</div>\n");
      out.write("\n");
      out.write("						<!-- *********************************************************************************** -->\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("</html>\n");
      out.write("\n");
      out.write("<Script>\n");
      out.write("	document.getElementById('main').addEventListener('click', e => {\n");
      out.write("\n");
      out.write("		if (e.target.matches('.boxbox')) {\n");
      out.write("			const faNum = e.target.dataset.fanum;\n");
      out.write("			const userId = e.target.dataset.userid;\n");
      out.write("\n");
      out.write("			console.log(faNum);\n");
      out.write("			console.log(userId);\n");
      out.write("\n");
      out.write("			fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/freeboard/getArticle/' + faNum)\n");
      out.write("				.then(res => res.json())\n");
      out.write("				.then(data => {\n");
      out.write("					console.log(data);\n");
      out.write("					document.getElementById('freeuserid').textContent = data.userId;\n");
      out.write("					\n");
      out.write("				});\n");
      out.write("\n");
      out.write("			\n");
      out.write("\n");
      out.write("		} else {\n");
      out.write("			console.log('여기는 이벤트 대상이 아님');\n");
      out.write("\n");
      out.write("			return;\n");
      out.write("		}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("	});\n");
      out.write("	\n");
      out.write("	document.getElementById('replyRegist').onclick = () => {\n");
      out.write("\n");
      out.write("        console.log('댓글 등록 이벤트 발생!');\n");
      out.write("\n");
      out.write("        \n");
      out.write("        const reply = document.getElementById('reply').value;\n");
      out.write("\n");
      out.write("        if (reply === '') {\n");
      out.write("            alert('내용을 입력하세요!');\n");
      out.write("            return;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        //요청에 관련된 정보 객체\n");
      out.write("        const reqObj = {\n");
      out.write("            method: 'post',\n");
      out.write("            headers: {\n");
      out.write("                'Content-Type': 'application/json'\n");
      out.write("            },\n");
      out.write("            body: JSON.stringify({\n");
      out.write("                'reply': reply,\n");
      out.write("            })\n");
      out.write("        };\n");
      out.write("\n");
      out.write("        fetch('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/reply/regist', reqObj)\n");
      out.write("            .then(res => res.text())\n");
      out.write("            .then(data => {\n");
      out.write("                console.log('통신 성공!: ' + data);\n");
      out.write("                document.getElementById('reply').value = '';\n");
      out.write("                \n");
      out.write("                \n");
      out.write("                //등록 완료 후 댓글 목록 함수를 호출해서 비동기식으로 목록 표현.\n");
      out.write("              //  getList(1, true);\n");
      out.write("            });\n");
      out.write("\n");
      out.write("    } //댓글 등록 이벤트 끝.\n");
      out.write("	\n");
      out.write("	\n");
      out.write("	\n");
      out.write("\n");
      out.write("\n");
      out.write("</Script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
